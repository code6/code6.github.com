<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | MayCoder]]></title>
  <link href="http://code6.github.com/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://code6.github.com/"/>
  <updated>2013-07-28T22:51:55+08:00</updated>
  <id>http://code6.github.com/</id>
  <author>
    <name><![CDATA[Code6]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress Setup]]></title>
    <link href="http://code6.github.com/blog/2012/03/09/octopress-setup/"/>
    <updated>2012-03-09T08:10:00+08:00</updated>
    <id>http://code6.github.com/blog/2012/03/09/octopress-setup</id>
    <content type="html"><![CDATA[<p>p(date). 2012-03-09</p>

<p><img src="/images/octopress_logo.png"></p>

<p>最早是在lzyy的blog看到 "使用github作为博客引擎":http://blog.leezhong.com/tech/2010/08/25/make-github-as-blog-engine.html, 后面在github上看到了 "他的博客的源代码":https://github.com/lzyy/lzyy.github.com/blob/master/_posts/2010-08-25-make-github-as-blog-engine.textile , 顿时感觉很不错, 这样写blog大概有几个优点:
* <em>markdown</em>
可以使用惯用的markdown来写文章(比如我觉得 "textile":http://redcloth.org/textile 跟 "confluence":http://www.atlassian.com/software/confluence/overview 的编辑语法很像)
* <em>git &amp;&amp; githhub</em>
使用git进行版本控制, 放在github上保存, 使用 "github pages":http://pages.github.com/ 发布, 空间再不是写blog的障碍了:)</p>

<p>经过约一周的围观与尝试= =, 差不多搞到可用了，剩下了就是加page, 搞插件，熟悉语法了。捣鼓过程无比心酸, 鉴于一个windows用户, 又不愿在windows上搞, 碰巧vmplayer中仅有一台别人配的centos, 于是开始捣鼓了。octopress 需要ruby, python(其中用到 "rubypython":https://github.com/halostatue/rubypython 似乎有依赖), git, ssl等一系列乱七八糟的东西, 按官方的说明去安装倒也无碍, 不过由于之前随意安装了一些低版本的东西, 往往会导致后面发现跑不起来, 于是也多了很多弯路, 总的来说, <em>顺风顺水的话, 安装还是很容易的</em>。</p>

<p>h3. <em>Octopress Setup</em></p>

<p>安装过程可以参考官方文档(参见附录), 这里结合我的环境(centos 5.7)复述一下, 后面再说说我遇到的囧问题。</p>

<p><em><em> </em>git &amp;&amp; github</em>
首先要有git, 为了在github上保存且发布, 要申请一个github账号并上传ssh key以支持push, 见 "github帮助":http://help.github.com/ 。</p>

<p><em><em> </em>创建ruby环境</em>
octopress 需要 ruby 1.9.2, 用 "rvm":https://github.com/wayneeseguin/rvm 可以方便安装, 先安装rvm</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install rvm  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bash -s stable &amp;lt; &amp;lt;<span class="o">(</span>curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>为了更方便使用rvm, 我们将其加入bash_profile中</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>add rvm to bash_profile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;[[ -s &quot;$HOME/.rvm/scripts/rvm&quot; ]] &amp;amp;&amp;amp; . &quot;$HOME/.rvm/scripts/rvm&quot; # Load RVM function&#39;</span> &gt;&gt; ~/.bash_profile
</span><span class='line'><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>安装ruby 1.9.2 获取最新的 "rubygems":http://rubygems.org/ , 并安装 "bundler":http://gembundler.com/</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install ruby  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm install 1.9.2 &amp;amp;&amp;amp; rvm use 1.9.2
</span><span class='line'>rvm rubygems latest
</span><span class='line'>ruby --version  <span class="c"># Should report Ruby 1.9.2</span>
</span><span class='line'>gem install bundler
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><em><em> </em>下载并安装octopress</em></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install octopress  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress    <span class="c"># If you use RVM, You&#39;ll be asked if you trust the .rvmrc file (say yes).</span>
</span><span class='line'>bundle install  <span class="c">#install dependencies</span>
</span><span class='line'>rake install    <span class="c"># Install the default Octopress theme.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>上文中用到一个 "rake":http://rake.rubyforge.org/ , 可以认为就是一种预先编好的 <em>任务脚本</em> , 观察文件夹中有一个 @Rakefile@ 打开看看就大概猜了下。</p>

<p>到这一步基本在本机上已经安装好octopress了, 我们可以把它发布到Github上(当然你还可以部署到 "其他地方":http://octopress.org/docs/deploying/ )。首先你得建一个以用户名命名的类似 @username.github.com@ 的Repository。比如我的就是 @code6.github.com@, 然后设定Github Pages:</p>

<p><div>
  <pre>
    <code class='bash'>rake setup_github_pages</code>
  </pre>
</div>
</p>

<p>之后会要求 @read/write url for repository@ 。
将 <em>git@github.com:yourname/yourname.github.com.git</em> 替换成自己的即可。</p>

<p><em><em> </em>建立和发布</em></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>deploy  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>很简单吧, 两条命令就搞定了~, 接下来就可以浏览 @http://username.github.com@
这里我们是将生成的站点的静态文件发布到了 @username.github.com@这个仓库的master分支上, 但这并不包含我们的源文件。 这里我们可以将原始文件提交到source分支上</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>initial commit  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;initial source commit&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><em><em> </em>目录结构</em></p>

<p>到这里我们基本搞差不多了, 可以开展日常工作了，这里可以先熟悉相应的代码结构。
这里主要的目录有 @source@ , @public@ , @<em>deploy@ , 还有个全局配置文件 @</em>config.yml@ 。
其中
@source@ 为源文件目录, 我们写的文章就在 @source/<em>posts@ 中, 当然还包括布局, 页面等好多东西
@public@ 为渲染后的静态blog目录
@</em>deploy@ 是用来需要部署的文件目录, 大概觉得是 @public@ 的一份拷贝
@_config.yml@ 是全局的配置文件, 语法参考 "这里":http://www.ibm.com/developerworks/cn/xml/x-cn-yamlintro/</p>

<p>这里插一个题外话, octopress是基于 "Jekyll":https://github.com/mojombo/jekyll 的, 最开始尝试时下载了jekyll, 由于前端方面的薄弱技能, handler不住, 于是才使用octopress的。最初还看了一个 "jekyll-bootstrap":https://github.com/plusjade/jekyll-bootstrap , 用起来也不麻烦，但猜测没有octopress强大这边的 @_config.yml@ , @source@ 都跟jekyll中的有关, 于是后面如果要捣鼓的话, 可以在那边多看看。 @source@ 目录可以参考jekyll的相关 "wiki":https://github.com/mojombo/jekyll/wiki/Usage 。</p>

<p><em><em> </em>日常任务</em></p>

<p><em>建立新文章</em>
文章必须发表在 @source/_posts@ 下，命名成 @YYYY-MM-DD-post-title.markdown@ 的格式， 我们可以使用octopress的rake 任务来快速创建一篇新文章:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rake new post  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;Zombie Ninjas Attack: A survivor&#39;s retrospective&quot;</span><span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Creates <span class="nb">source</span>/_posts/2011-07-03-zombie-ninjas-attack-a-survivors-retrospective.markdown&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>默认的后缀是 @markdown@ , 可以在 Rakefile中修改。通过此任务创建的文章会补上开头的 "元信息":https://github.com/mojombo/jekyll/wiki/yaml-front-matter 。
接下来我们就可以用自己喜爱的编辑器来编辑了。</p>

<p><em>建立页面</em>
略</p>

<p><em>生成与预览</em>
当我们完成一篇文章的创作时，我们可以在本机预览我们的文章。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>generate and preview  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate   <span class="c"># Generates posts and pages into the public directory</span>
</span><span class='line'>rake preview    <span class="c"># Watches source/ and sass/ for changes and regenerates, and mounts a webserver at http://localhost:4000</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中 @rake generate@ 是将文章和页面生成到 @public@ 目录中，后面我们才能发布我们的改动。
@rake preview@ 会在本地4000端口起一个网站服务器, 我们访问 @http://localhost:4000@ 则可以看到自己的博客。还有一点是它会监听 @source@ 和 @sass@ 的改动，并重新生成文件，也就是说我们无需重启服务器就可以预览最新的文章。</p>

<p><em>发布</em>
同上文。</p>

<p><em>更新octopress</em></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>upgrade octopress  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git pull octopress master     <span class="c"># Get the latest Octopress</span>
</span><span class='line'>bundle install                <span class="c"># Keep gems updated</span>
</span><span class='line'>rake update_source            <span class="c"># update the template&#39;s source</span>
</span><span class='line'>rake update_style             <span class="c"># update the template&#39;s style</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>更多请参考 "官方文档":http://octopress.org/docs/blogging/ 。</p>

<p><em>textile语法参考</em>
考虑使用textile来写blog, 可以从很多github上的repo中来学习。参考 "github上挂的Jekyll的站点":https://github.com/mojombo/jekyll/wiki/sites , 或者参考 "相关手册":http://redcloth.org/hobix.com/textile/ 。 注意文件后缀名不要 <em>拼错</em> , 否则无法渲染。 使用过程中感觉textile对于 <em>空格要求比较严格</em> , 该 <em>留空格</em> 的地方还得留一下, 另外段落之间也最好 <em>留一个空行</em> 。 另外发现textile的一些标签不是非常好用, 还得自己做尝试才能得到预期效果。 当然你也可以考虑直接使用 "markdown":http://wowubuntu.com/markdown/ 。</p>

<p>h3. <em>安装补充</em></p>

<p>这边主要想说一下我所遇到的问题，当然不是所有人都会遇到，仅限于比较悲剧的人来说。</p>

<p><em>GemFile</em>
把源改成http://ruby.taobao.org, 据说会比较快, 具体我这边就是讲 @gem@ 和 @GemFile@ 稍微改了下。</p>

<p><em>ruby blows up with gem dependency</em>
参考 "这里":http://stackoverflow.com/questions/4262616/ruby-1-9-2-blows-up-with-json-gem-dependency , 重装一下ruby并升级一下:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>reinstall ruby  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm uninstall 1.9.2
</span><span class='line'>gem update --system;
</span><span class='line'>gem pristine --all
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><em>rubypython 调用到libpython2.x.so失败</em></p>

<p>由于我先前是用pythonbrew来安装python的，装了python2.7, 本机自带了一个python2.4。 我将pythonbrew关掉, 就ok了，未深究。</p>

<p><em>ruby环境安装不全</em>
通过 @rvm requirements@ 查看一下需要预先安装什么，然后装好再重装ruby= =</p>

<p><em>rdiscount fail to generate</em>
据说 @rdiscount@ 会快一些, 这里重装一下就好了。。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>reinstall rdiscount  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem uninstall rdiscount
</span><span class='line'>gem install rdiscount
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><em>deploy时拷贝swp/swo文件失败</em>
简单在deploy时忽略swp,swo文件, 在Rakefile中修改:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>modify rakefile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="no">FileList</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">args</span><span class="o">.</span><span class="n">source</span><span class="si">}</span><span class="s2">/&lt;strong&gt;/.*&quot;</span><span class="o">].</span><span class="n">exclude</span><span class="p">(</span><span class="s2">&quot;&lt;/strong&gt;/.&quot;</span><span class="p">,</span> <span class="s2">&quot;&lt;strong&gt;/..&quot;</span><span class="p">,</span> <span class="s2">&quot;&lt;/strong&gt;/.DS_Store&quot;</span><span class="p">,</span> <span class="s2">&quot;&lt;strong&gt;/._*&quot;</span><span class="p">,</span> <span class="s1">&#39;&lt;/strong&gt;/.&lt;em&gt;.swp&#39;</span><span class="p">,</span> <span class="s1">&#39;**/.&lt;/em&gt;.swo&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><em>异地重新clone一份blog的时候deploy失败</em>
参考 "这个issue":https://github.com/imathis/octopress/issues/412 ，看起来重新clone的时候还需要再次执行一边 @rake setup_github_pages@ 才行。</p>

<hr />

<p>h3. <em>附录</em></p>

<p>"Octopress Setup":http://octopress.org/docs/setup/
"Octopress: a blogging framework for hackers":http://lyhdev.com/note:octopress
"Ruby开源项目介绍(1):octopress--像黑客一样写博客":http://www.yangzhiping.com/tech/octopress.html
"Blog = GitHub + Octopress":http://mrzhang.me/blog/blog-equals-github-plus-octopress.html
"如何高效地使用GitHub":http://www.yangzhiping.com/tech/github.html
"Blogging Like a Hacker":http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html</p>
]]></content>
  </entry>
  
</feed>
